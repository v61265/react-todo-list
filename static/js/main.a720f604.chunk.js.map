{"version":3,"sources":["compopent/TodoItem.js","hooks/useTodos.js","hooks/useInput.js","App.js","reportWebVitals.js","index.js"],"names":["TodoItemWrapper","styled","div","props","theme","colors","blue_1","TodoButtonWrapper","TodoContent","$isDone","Button","button","EditTodo","input","TodoItem","todo","handleDeleteTodo","handleToggleIsDone","handleUpdateTodo","handleEditChange","isEditing","isDone","content","value","onChange","e","id","onClick","useTodos","useState","setValue","handleChange","target","useInput","filter","setFilter","useRef","todoData","JSON","parse","window","localStorage","getItem","current","todos","setTodos","useEffect","setItem","stringify","writeTodosToLocalStorage","handleAddTodo","alert","map","handleDeleteAll","renderAll","renderDone","renderUndone","item","Container","yello_1","ButtonWrapper","App","type","placeholder","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","blue_2","blue_3","yello_2","yello_3","document","getElementById"],"mappings":"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","file":"static/js/main.a720f604.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst TodoItemWrapper = styled.div`\n  margin: 0 auto;\n  margin-top: 10px;\n  border-bottom: 1px solid ${(props) => props.theme.colors.blue_1};\n  padding: 5px;\n  display: flex;\n  justify-content: space-between;\n`;\nconst TodoButtonWrapper = styled.div`\n  min-width: 150px;\n  right: 0;\n  display: flex;\n  justify-content: flex-end;\n  height: 30px;\n`;\n\nconst TodoContent = styled.div`\n  font-size: 14px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 400px;\n  color: ${(props) => props.theme.colors.blue_1};\n  ${(props) =>\n    props.$isDone &&\n    `\n    text-decoration: line-through;\n  `}\n`;\n\nconst Button = styled.button`\n  display: absolute;\n  right: 0px;\n\n  & + & {\n    margin-left: 5px;\n  }\n`;\n\nconst EditTodo = styled.input`\n  max-width: 400px;\n  padding: 2px;\n`;\n\nfunction TodoItem({\n  todo,\n  handleDeleteTodo,\n  handleToggleIsDone,\n  handleUpdateTodo,\n  handleEditChange,\n}) {\n  return (\n    <TodoItemWrapper>\n      {!todo.isEditing && (\n        <TodoContent $isDone={todo.isDone}>{todo.content}</TodoContent>\n      )}\n      {todo.isEditing && (\n        <EditTodo\n          value={todo.content}\n          onChange={(e) => handleEditChange(todo.id, e)}\n        />\n      )}\n      <TodoButtonWrapper>\n        {!todo.isDone && (\n          <Button onClick={() => handleUpdateTodo(todo)}>編輯</Button>\n        )}\n        {!todo.isEditing && (\n          <Button\n            onClick={() => {\n              handleToggleIsDone(todo.id);\n            }}\n          >\n            {todo.isDone ? \"未完成\" : \"已完成\"}\n          </Button>\n        )}\n        <Button onClick={() => handleDeleteTodo(todo.id)}>刪除</Button>\n      </TodoButtonWrapper>\n    </TodoItemWrapper>\n  );\n}\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.number,\n    content: PropTypes.string,\n    isDone: PropTypes.bool,\n    isEditing: PropTypes.bool,\n  }),\n  handleDeleteTodo: PropTypes.func,\n  handleToggleIsDone: PropTypes.func,\n  handleDeleteAll: PropTypes.func,\n  handleUpdateTodo: PropTypes.func,\n  handleEditChange: PropTypes.func,\n};\n\nexport default TodoItem;\n","import { useState, useEffect, useRef } from \"react\";\nimport useInput from \"./useInput\";\n\nfunction writeTodosToLocalStorage(todos) {\n  window.localStorage.setItem(\"todos\", JSON.stringify(todos));\n}\n\nexport default function useTodos() {\n  const { value, setValue, handleChange } = useInput();\n  const [filter, setFilter] = useState(\"all\");\n  const id = useRef(1);\n\n  const [todos, setTodos] = useState(() => {\n    const todoData = JSON.parse(window.localStorage.getItem(\"todos\")) || [\n      { id: 2, content: \"送出履歷\", isDone: false, isEditing: false },\n      { id: 1, content: \"寫履歷\", isDone: true, isEditing: false },\n    ];\n    id.current = todoData[0] ? todoData[0].id + 1 : 1;\n\n    return todoData;\n  });\n\n  useEffect(() => {\n    writeTodosToLocalStorage(todos);\n  }, [todos]);\n\n  const handleAddTodo = () => {\n    if (!value) return alert(\"請輸入內容～\");\n    setTodos([\n      {\n        id: id.current,\n        content: value,\n        isDone: false,\n        isEditing: false,\n      },\n      ...todos,\n    ]);\n    setValue(\"\");\n    id.current++;\n  };\n\n  const handleDeleteTodo = (id) => {\n    setTodos(todos.filter((todo) => todo.id !== id));\n  };\n\n  const handleToggleIsDone = (id) => {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id !== id) return todo;\n        return {\n          ...todo,\n          isDone: !todo.isDone,\n        };\n      })\n    );\n  };\n\n  const handleDeleteAll = () => {\n    setTodos([]);\n  };\n\n  const renderAll = () => setFilter(\"all\");\n  const renderDone = () => setFilter(\"done\");\n  const renderUndone = () => setFilter(\"undone\");\n\n  const handleUpdateTodo = (todo, e) => {\n    setTodos(\n      todos.map((item) => {\n        if (item.id !== todo.id) return item;\n        return {\n          ...item,\n          isEditing: !item.isEditing,\n        };\n      })\n    );\n  };\n\n  const handleEditChange = (id, e) => {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id !== id) return todo;\n        return {\n          ...todo,\n          content: e.target.value,\n        };\n      })\n    );\n  };\n\n  return {\n    todos,\n    handleAddTodo,\n    handleDeleteTodo,\n    handleToggleIsDone,\n    handleDeleteAll,\n    renderAll,\n    renderDone,\n    renderUndone,\n    handleUpdateTodo,\n    handleEditChange,\n    value,\n    filter,\n    handleChange,\n  };\n}\n","import { useState } from \"react\";\n\nexport default function useInput() {\n  const [value, setValue] = useState(\"\");\n  const handleChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  return {\n    value,\n    setValue,\n    handleChange,\n  };\n}\n","import styled from \"styled-components\";\nimport \"./App.css\";\nimport TodoItem from \"./compopent/TodoItem\";\nimport useTodos from \"./hooks/useTodos\";\nimport PropTypes from \"prop-types\";\n\nconst Container = styled.div`\n  background: rgba(246, 217, 152, 0.7);\n  max-width: 600px;\n  margin: 0 auto;\n  margin-top: 50px;\n  padding: 40px;\n  border-radius: 20px;\n\n  h1 {\n    color: ${(props) => props.theme.colors.blue_1};\n    text-align: center;\n  }\n\n  input {\n    width: 98%;\n    padding: 10px;\n    font-size: 16px;\n    border: 1px solid ${(props) => props.theme.colors.blue_1};\n    color: ${(props) => props.theme.colors.blue_1};\n    border-radius: 5px;\n  }\n\n  button {\n    padding: 5px;\n    background: white;\n    border: 1px solid ${(props) => props.theme.colors.blue_1};\n    color: ${(props) => props.theme.colors.blue_1};\n    border-radius: 5px;\n\n    &:hover {\n      cursor: pointer;\n      background: ${(props) => props.theme.colors.blue_1};\n      color: ${(props) => props.theme.colors.yello_1};\n    }\n  }\n\n  .addTodo {\n    width: 100%;\n    font-size: 16px;\n    margin: 10px;\n  }\n`;\n\nconst ButtonWrapper = styled.div`\n  margin-top: 20px;\n  display: flex;\n  justify-content: space-between;\n\n  button + button {\n    margin-left: 5px;\n  }\n`;\n\nfunction App() {\n  const {\n    todos,\n    handleAddTodo,\n    handleDeleteTodo,\n    handleToggleIsDone,\n    handleDeleteAll,\n    renderAll,\n    renderDone,\n    renderUndone,\n    handleUpdateTodo,\n    handleEditChange,\n    filter,\n    handleChange,\n    value,\n  } = useTodos();\n\n  return (\n    <Container>\n      <h1>TODO LIST</h1>\n      <input\n        type='text'\n        placeholder='todo'\n        value={value}\n        onChange={handleChange}\n      />\n      <button className='addTodo' onClick={handleAddTodo}>\n        Add todo\n      </button>\n      {todos\n        .filter((todo) => {\n          if (filter === \"all\") return todo;\n          if (filter === \"done\") return todo.isDone;\n          return !todo.isDone;\n        })\n        .map((todo) => (\n          <TodoItem\n            key={todo.id}\n            todo={todo}\n            handleDeleteTodo={handleDeleteTodo}\n            handleToggleIsDone={handleToggleIsDone}\n            handleUpdateTodo={handleUpdateTodo}\n            handleEditChange={handleEditChange}\n          />\n        ))}\n      <ButtonWrapper>\n        <div>\n          <button onClick={renderAll}>全部</button>\n          <button onClick={renderDone}>已完成</button>\n          <button onClick={renderUndone}>未完成</button>\n        </div>\n        <div>\n          <button onClick={handleDeleteAll}>清空全部</button>\n        </div>\n      </ButtonWrapper>\n    </Container>\n  );\n}\n\nApp.propTypes = {\n  todos: PropTypes.array,\n  handleAddTodo: PropTypes.func,\n  handleDeleteTodo: PropTypes.func,\n  handleToggleIsDone: PropTypes.func,\n  handleDeleteAll: PropTypes.func,\n  renderAll: PropTypes.func,\n  renderDone: PropTypes.func,\n  renderUndone: PropTypes.func,\n  handleUpdateTodo: PropTypes.func,\n  handleEditChange: PropTypes.func,\n  filter: PropTypes.string,\n  handleChange: PropTypes.func,\n  value: PropTypes.string,\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ThemeProvider } from \"styled-components\";\n\nconst theme = {\n  colors: {\n    blue_1: \"#2A3F6F\",\n    blue_2: \"#455A89\",\n    blue_3: \"#06163A\",\n    yello_1: \"#A68332\",\n    yello_2: \"#CCAA5C\",\n    yello_3: \"#563C00\",\n  },\n};\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}