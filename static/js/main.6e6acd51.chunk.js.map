{"version":3,"sources":["TodoItem.js","App.js","reportWebVitals.js","index.js"],"names":["TodoItemWrapper","styled","div","props","theme","colors","blue_1","TodoButtonWrapper","TodoContent","$isDone","Button","button","EditTodo","input","TodoItem","todo","handleDeleteTodo","handleToggleIsDone","handleUpdateTodo","handleEditChange","isEditing","isDone","content","value","onChange","e","id","onClick","Container","yello_1","ButtonWrapper","App","useState","todos","setTodos","filter","setFilter","setValue","map","item","target","type","placeholder","className","alert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","blue_2","blue_3","yello_2","yello_3","document","getElementById"],"mappings":"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","file":"static/js/main.6e6acd51.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst TodoItemWrapper = styled.div`\n  margin: 0 auto;\n  margin-top: 10px;\n  border-bottom: 1px solid ${(props) => props.theme.colors.blue_1};\n  padding: 5px;\n  display: flex;\n  justify-content: space-between;\n`;\nconst TodoButtonWrapper = styled.div`\n  min-width: 150px;\n  right: 0;\n  display: flex;\n  justify-content: flex-end;\n  height: 30px;\n`;\n\nconst TodoContent = styled.div`\n  font-size: 14px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 400px;\n  color: ${(props) => props.theme.colors.blue_1};\n  ${(props) =>\n    props.$isDone &&\n    `\n    text-decoration: line-through;\n  `}\n`;\n\nconst Button = styled.button`\n  display: absolute;\n  right: 0px;\n\n  & + & {\n    margin-left: 5px;\n  }\n`;\n\nconst EditTodo = styled.input`\n  max-width: 400px;\n  padding: 2px;\n`;\n\nfunction TodoItem({\n  todo,\n  handleDeleteTodo,\n  handleToggleIsDone,\n  handleUpdateTodo,\n  handleEditChange,\n}) {\n  return (\n    <TodoItemWrapper>\n      {!todo.isEditing && (\n        <TodoContent $isDone={todo.isDone}>{todo.content}</TodoContent>\n      )}\n      {todo.isEditing && (\n        <EditTodo\n          value={todo.content}\n          onChange={(e) => handleEditChange(todo.id, e)}\n        />\n      )}\n      <TodoButtonWrapper>\n        {!todo.isDone && (\n          <Button onClick={() => handleUpdateTodo(todo)}>編輯</Button>\n        )}\n        {!todo.isEditing && (\n          <Button\n            onClick={() => {\n              handleToggleIsDone(todo.id);\n            }}\n          >\n            {todo.isDone ? \"未完成\" : \"已完成\"}\n          </Button>\n        )}\n        <Button onClick={() => handleDeleteTodo(todo.id)}>刪除</Button>\n      </TodoButtonWrapper>\n    </TodoItemWrapper>\n  );\n}\n\nexport default TodoItem;\n","import styled from \"styled-components\";\nimport \"./App.css\";\nimport TodoItem from \"./TodoItem\";\nimport { useState } from \"react\";\n\nconst Container = styled.div`\n  background: rgba(246, 217, 152, 0.7);\n  max-width: 600px;\n  margin: 0 auto;\n  margin-top: 50px;\n  padding: 40px;\n  border-radius: 20px;\n\n  h1 {\n    color: ${(props) => props.theme.colors.blue_1};\n    text-align: center;\n  }\n\n  input {\n    width: 98%;\n    padding: 10px;\n    font-size: 16px;\n    border: 1px solid ${(props) => props.theme.colors.blue_1};\n    color: ${(props) => props.theme.colors.blue_1};\n    border-radius: 5px;\n  }\n\n  button {\n    padding: 5px;\n    background: white;\n    border: 1px solid ${(props) => props.theme.colors.blue_1};\n    color: ${(props) => props.theme.colors.blue_1};\n    border-radius: 5px;\n\n    &:hover {\n      cursor: pointer;\n      background: ${(props) => props.theme.colors.blue_1};\n      color: ${(props) => props.theme.colors.yello_1};\n    }\n  }\n\n  .addTodo {\n    width: 100%;\n    font-size: 16px;\n    margin: 10px;\n  }\n`;\n\nconst ButtonWrapper = styled.div`\n  margin-top: 20px;\n  display: flex;\n  justify-content: space-between;\n\n  button + button {\n    margin-left: 5px;\n  }\n`;\n\n// 因為每次 render 都重新呼叫一次 App ，因此不能放裡面。\n// 也不用設定成 state ，因為 id 不用 render 。\nlet id = 3;\n\nfunction App() {\n  const [todos, setTodos] = useState([\n    { id: 1, content: \"寫履歷\", isDone: true, isEditing: false },\n    { id: 2, content: \"送出履歷！\", isDone: false, isEditing: false },\n  ]);\n  const [filter, setFilter] = useState(\"all\");\n  const [value, setValue] = useState(\"\");\n\n  const handleInputChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  function handleAddTodo() {\n    if (!value) return alert(\"請輸入內容～\");\n    setTodos([\n      {\n        id,\n        content: value,\n        isDone: false,\n        isEditing: false,\n      },\n      ...todos,\n    ]);\n    setValue(\"\");\n    id++;\n  }\n\n  const handleDeleteTodo = (id) => {\n    setTodos(todos.filter((todo) => todo.id !== id));\n  };\n\n  const handleToggleIsDone = (id) => {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id !== id) return todo;\n        return {\n          ...todo,\n          isDone: !todo.isDone,\n        };\n      })\n    );\n  };\n\n  const handleDeleteAll = () => {\n    setTodos([]);\n  };\n\n  const renderAll = () => setFilter(\"all\");\n  const renderDone = () => setFilter(\"done\");\n  const renderUndone = () => setFilter(\"undone\");\n\n  const handleUpdateTodo = (todo, e) => {\n    setTodos(\n      todos.map((item) => {\n        if (item.id !== todo.id) return item;\n        return {\n          ...item,\n          isEditing: !item.isEditing,\n        };\n      })\n    );\n  };\n\n  const handleEditChange = (id, e) => {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id !== id) return todo;\n        return {\n          ...todo,\n          content: e.target.value,\n        };\n      })\n    );\n  };\n\n  return (\n    <Container>\n      <h1>TODO LIST</h1>\n      <input\n        type='text'\n        placeholder='todo'\n        value={value}\n        onChange={handleInputChange}\n      />\n      <button className='addTodo' onClick={handleAddTodo}>\n        Add todo\n      </button>\n      {todos\n        .filter((todo) => {\n          if (filter === \"all\") return todo;\n          if (filter === \"done\") return todo.isDone;\n          return !todo.isDone;\n        })\n        .map((todo) => (\n          <TodoItem\n            key={todo.id}\n            todo={todo}\n            handleDeleteTodo={handleDeleteTodo}\n            handleToggleIsDone={handleToggleIsDone}\n            handleUpdateTodo={handleUpdateTodo}\n            handleEditChange={handleEditChange}\n          />\n        ))}\n      <ButtonWrapper>\n        <div>\n          <button onClick={renderAll}>全部</button>\n          <button onClick={renderDone}>已完成</button>\n          <button onClick={renderUndone}>未完成</button>\n        </div>\n        <div>\n          <button onClick={handleDeleteAll}>清空全部</button>\n        </div>\n      </ButtonWrapper>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ThemeProvider } from \"styled-components\";\n\nconst theme = {\n  colors: {\n    blue_1: \"#2A3F6F\",\n    blue_2: \"#455A89\",\n    blue_3: \"#06163A\",\n    yello_1: \"#A68332\",\n    yello_2: \"#CCAA5C\",\n    yello_3: \"#563C00\",\n  },\n};\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}